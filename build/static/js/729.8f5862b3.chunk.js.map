{"version":3,"file":"static/js/729.8f5862b3.chunk.js","mappings":"2KAEA,MAqLA,EArL2BA,KACzB,MAAMC,GAAYC,EAAAA,EAAAA,QAAO,MACnBC,GAAeD,EAAAA,EAAAA,QAAO,MAoK5B,OAlKAE,EAAAA,EAAAA,YAAU,KACR,IAAKH,EAAUI,QAAS,OAExB,MAAMC,EAASL,EAAUI,QACnBE,EAAMD,EAAOE,WAAW,MACxBC,EAAYN,EAAaE,QAGzBK,EAAsBA,KAC1BJ,EAAOK,MAAQF,EAAUG,YACzBN,EAAOO,OAASJ,EAAUK,YAAY,EAGxCJ,IACAK,OAAOC,iBAAiB,SAAUN,GAGlC,MACMO,EAAiB,CACrB,0BACA,0BACA,2BAIIC,EAAW,GAMXC,EAAYC,MAAMC,KAAK,CAAEC,OAdT,KAckC,MACtDC,EAAGC,KAAKC,SAAWnB,EAAOK,MAC1Be,EAAGF,KAAKC,SAAWnB,EAAOO,OAC1Bc,KAXc,EAWe,EAAbH,KAAKC,SACrBG,MAAOX,EAAeO,KAAKK,MAAML,KAAKC,SAAWR,EAAeK,SAChEQ,OAA4B,IAAnBN,KAAKC,SAAW,IAA+BP,EACxDa,OAA4B,IAAnBP,KAAKC,SAAW,IAA+BP,EACxDc,oBAAqC,IAAhBR,KAAKC,SAAiB,GAC3CQ,eAAgB,EAChBC,QAAyB,GAAhBV,KAAKC,SAAiB,GAC/BU,MAAOX,KAAKC,SAAW,GACvBW,WAA4B,IAAhBZ,KAAKC,SAAkB,QAIrC,IAAIY,EAAQ,CACVd,EAAG,KACHG,EAAG,KACHY,OAAQ,KAGV,MAAMC,EAAmBC,IACvB,MAAMC,EAAOnC,EAAOoC,wBACpBL,EAAMd,EAAIiB,EAAMG,QAAUF,EAAKG,KAC/BP,EAAMX,EAAIc,EAAMK,QAAUJ,EAAKK,GAAG,EAG9BC,EAAmBA,KACvBV,EAAMd,EAAI,KACVc,EAAMX,EAAI,IAAI,EA+FhB,OA5FAjB,EAAUO,iBAAiB,YAAauB,GACxC9B,EAAUO,iBAAiB,aAAc+B,GAGzC,SAASC,IACPzC,EAAI0C,UAAU,EAAG,EAAG3C,EAAOK,MAAOL,EAAOO,QAGzCN,EAAI2C,UAAY,EAEhB,IAAK,IAAIC,EAAI,EAAGA,EAAIhC,EAAUG,OAAQ6B,IACpC,IAAK,IAAIC,EAAID,EAAI,EAAGC,EAAIjC,EAAUG,OAAQ8B,IAAK,CAC7C,MAAMC,EAAKlC,EAAUgC,GAAG5B,EAAIJ,EAAUiC,GAAG7B,EACnC+B,EAAKnC,EAAUgC,GAAGzB,EAAIP,EAAUiC,GAAG1B,EACnC6B,EAAW/B,KAAKgC,KAAKH,EAAKA,EAAKC,EAAKA,GAE1C,GAAIC,EApDiB,IAoDc,CAEjC,MAAME,EAAWlD,EAAImD,qBACnBvC,EAAUgC,GAAG5B,EAAGJ,EAAUgC,GAAGzB,EAC7BP,EAAUiC,GAAG7B,EAAGJ,EAAUiC,GAAG1B,GAG/B+B,EAASE,aAAa,EAAGxC,EAAUgC,GAAGvB,MAAMgC,QAAQ,aA1DlC,IA0DwE,EAAIL,EA3D3E,KA2D+C,MAClEE,EAASE,aAAa,EAAGxC,EAAUiC,GAAGxB,MAAMgC,QAAQ,aA3DlC,IA2DwE,EAAIL,EA5D3E,KA4D+C,MAElEhD,EAAIsD,YACJtD,EAAIuD,YAAcL,EAClBlD,EAAIwD,OAAO5C,EAAUgC,GAAG5B,EAAGJ,EAAUgC,GAAGzB,GACxCnB,EAAIyD,OAAO7C,EAAUiC,GAAG7B,EAAGJ,EAAUiC,GAAG1B,GACxCnB,EAAI0D,QACN,CACF,CAIF9C,EAAU+C,SAAQC,IAuBhB,GArBIA,EAAShC,QACXgC,EAASjC,SAAwD,IAA7CV,KAAK4C,IAAIC,KAAKC,MAAQH,EAAS/B,YACnD+B,EAASjC,QAAUV,KAAK+C,IAAI,GAAK/C,KAAKgD,IAAI,GAAKL,EAASjC,WAI1D3B,EAAIsD,YACJtD,EAAIkE,IAAIN,EAAS5C,EAAG4C,EAASzC,EAAGyC,EAASxC,KAAM,EAAa,EAAVH,KAAKkD,IACvDnE,EAAIoE,UAAYR,EAASvC,MAAMgC,QAAQ,aAAc,GAAGO,EAASjC,YACjE3B,EAAIqE,OAGJT,EAASlC,iBACLkC,EAASlC,gBAAkBkC,EAASnC,sBACtCmC,EAASrC,OAA6B,IAAnBN,KAAKC,SAAW,IAA+BP,EAClEiD,EAASpC,OAA6B,IAAnBP,KAAKC,SAAW,IAA+BP,EAClEiD,EAASlC,eAAiB,EAC1BkC,EAASnC,oBAAsC,IAAhBR,KAAKC,SAAiB,IAIvC,OAAZY,EAAMd,GAA0B,OAAZc,EAAMX,EAAY,CACxC,MAAM2B,EAAKc,EAAS5C,EAAIc,EAAMd,EACxB+B,EAAKa,EAASzC,EAAIW,EAAMX,EACxB6B,EAAW/B,KAAKgC,KAAKH,EAAKA,EAAKC,EAAKA,GAE1C,GAAIC,EAAWlB,EAAMC,OAAQ,CAC3B,MAAMuC,GAASxC,EAAMC,OAASiB,GAAYlB,EAAMC,OAC1CwC,EAAQtD,KAAKuD,MAAMzB,EAAID,GAC7Bc,EAAS5C,GAAKC,KAAKwD,IAAIF,GAASD,EAAQ,EACxCV,EAASzC,GAAKF,KAAK4C,IAAIU,GAASD,EAAQ,CAC1C,CACF,CAEAV,EAAS5C,GAAK4C,EAASrC,OACvBqC,EAASzC,GAAKyC,EAASpC,QAGnBoC,EAAS5C,EAAI,GAAK4C,EAAS5C,EAAIjB,EAAOK,SACxCwD,EAASrC,SAAW,GACpBqC,EAAS5C,EAAI4C,EAAS5C,EAAI,EAAI,EAAIjB,EAAOK,QAEvCwD,EAASzC,EAAI,GAAKyC,EAASzC,EAAIpB,EAAOO,UACxCsD,EAASpC,SAAW,GACpBoC,EAASzC,EAAIyC,EAASzC,EAAI,EAAI,EAAIpB,EAAOO,OAC3C,IAGFoE,sBAAsBjC,EACxB,CAEAA,GAGO,KACLjC,OAAOmE,oBAAoB,SAAUxE,GACrCD,EAAUyE,oBAAoB,YAAa3C,GAC3C9B,EAAUyE,oBAAoB,aAAcnC,EAAiB,CAC9D,GACA,KAGDoC,EAAAA,EAAAA,MAAA,OACEC,IAAKjF,EACLkF,UAAU,mCAAkCC,SAAA,EAE5CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sGACfE,EAAAA,EAAAA,KAAA,UACEH,IAAKnF,EACLoF,UAAU,wBACVG,MAAO,CAAEC,cAAe,YAEtB,C","sources":["components/ParticleBackground.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\nconst ParticleBackground = () => {\r\n  const canvasRef = useRef(null);\r\n  const containerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!canvasRef.current) return;\r\n    \r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    const container = containerRef.current;\r\n    \r\n    // Set canvas dimensions\r\n    const setCanvasDimensions = () => {\r\n      canvas.width = container.offsetWidth;\r\n      canvas.height = container.offsetHeight;\r\n    };\r\n    \r\n    setCanvasDimensions();\r\n    window.addEventListener('resize', setCanvasDimensions);\r\n    \r\n    // Particle settings - enhanced for a more modern look\r\n    const particleCount = 60;\r\n    const particleColors = [\r\n      'rgba(109, 40, 217, 0.3)',  // primary-700\r\n      'rgba(14, 116, 144, 0.2)',  // secondary-700\r\n      'rgba(245, 158, 11, 0.2)',  // accent-500\r\n    ];\r\n    const minSize = 1;\r\n    const maxSize = 4;\r\n    const minSpeed = 0.1;\r\n    const maxSpeed = 0.5;\r\n    const connectionDistance = 120;\r\n    const connectionOpacity = 0.1;\r\n    \r\n    // Create particles with improved variety\r\n    const particles = Array.from({ length: particleCount }, () => ({\r\n      x: Math.random() * canvas.width,\r\n      y: Math.random() * canvas.height,\r\n      size: minSize + Math.random() * (maxSize - minSize),\r\n      color: particleColors[Math.floor(Math.random() * particleColors.length)],\r\n      speedX: (Math.random() - 0.5) * (maxSpeed - minSpeed) + minSpeed,\r\n      speedY: (Math.random() - 0.5) * (maxSpeed - minSpeed) + minSpeed,\r\n      directionChangeTime: Math.random() * 200 + 50,\r\n      directionTimer: 0,\r\n      opacity: Math.random() * 0.5 + 0.3,\r\n      pulse: Math.random() > 0.7, // Some particles will pulse\r\n      pulseSpeed: Math.random() * 0.02 + 0.01\r\n    }));\r\n    \r\n    // Mouse interaction\r\n    let mouse = {\r\n      x: null,\r\n      y: null,\r\n      radius: 150\r\n    };\r\n    \r\n    const handleMouseMove = (event) => {\r\n      const rect = canvas.getBoundingClientRect();\r\n      mouse.x = event.clientX - rect.left;\r\n      mouse.y = event.clientY - rect.top;\r\n    };\r\n    \r\n    const handleMouseLeave = () => {\r\n      mouse.x = null;\r\n      mouse.y = null;\r\n    };\r\n    \r\n    container.addEventListener('mousemove', handleMouseMove);\r\n    container.addEventListener('mouseleave', handleMouseLeave);\r\n    \r\n    // Animation loop with improved physics\r\n    function animate() {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      \r\n      // First draw connections with gradient effect\r\n      ctx.lineWidth = 1;\r\n      \r\n      for (let i = 0; i < particles.length; i++) {\r\n        for (let j = i + 1; j < particles.length; j++) {\r\n          const dx = particles[i].x - particles[j].x;\r\n          const dy = particles[i].y - particles[j].y;\r\n          const distance = Math.sqrt(dx * dx + dy * dy);\r\n          \r\n          if (distance < connectionDistance) {\r\n            // Create gradient connections\r\n            const gradient = ctx.createLinearGradient(\r\n              particles[i].x, particles[i].y, \r\n              particles[j].x, particles[j].y\r\n            );\r\n            \r\n            gradient.addColorStop(0, particles[i].color.replace(/[\\d.]+\\)$/g, `${connectionOpacity * (1 - distance / connectionDistance)})`));\r\n            gradient.addColorStop(1, particles[j].color.replace(/[\\d.]+\\)$/g, `${connectionOpacity * (1 - distance / connectionDistance)})`));\r\n            \r\n            ctx.beginPath();\r\n            ctx.strokeStyle = gradient;\r\n            ctx.moveTo(particles[i].x, particles[i].y);\r\n            ctx.lineTo(particles[j].x, particles[j].y);\r\n            ctx.stroke();\r\n          }\r\n        }\r\n      }\r\n      \r\n      // Then draw and update particles\r\n      particles.forEach(particle => {\r\n        // Update particle opacity if pulsing\r\n        if (particle.pulse) {\r\n          particle.opacity += Math.sin(Date.now() * particle.pulseSpeed) * 0.01;\r\n          particle.opacity = Math.max(0.1, Math.min(0.8, particle.opacity));\r\n        }\r\n        \r\n        // Draw particle with current opacity\r\n        ctx.beginPath();\r\n        ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);\r\n        ctx.fillStyle = particle.color.replace(/[\\d.]+\\)$/g, `${particle.opacity})`);\r\n        ctx.fill();\r\n        \r\n        // Update position with more natural movement\r\n        particle.directionTimer++;\r\n        if (particle.directionTimer >= particle.directionChangeTime) {\r\n          particle.speedX = (Math.random() - 0.5) * (maxSpeed - minSpeed) + minSpeed;\r\n          particle.speedY = (Math.random() - 0.5) * (maxSpeed - minSpeed) + minSpeed;\r\n          particle.directionTimer = 0;\r\n          particle.directionChangeTime = Math.random() * 200 + 50;\r\n        }\r\n        \r\n        // Apply mouse repulsion effect\r\n        if (mouse.x !== null && mouse.y !== null) {\r\n          const dx = particle.x - mouse.x;\r\n          const dy = particle.y - mouse.y;\r\n          const distance = Math.sqrt(dx * dx + dy * dy);\r\n          \r\n          if (distance < mouse.radius) {\r\n            const force = (mouse.radius - distance) / mouse.radius;\r\n            const angle = Math.atan2(dy, dx);\r\n            particle.x += Math.cos(angle) * force * 2;\r\n            particle.y += Math.sin(angle) * force * 2;\r\n          }\r\n        }\r\n        \r\n        particle.x += particle.speedX;\r\n        particle.y += particle.speedY;\r\n        \r\n        // Bounce off edges with damping\r\n        if (particle.x < 0 || particle.x > canvas.width) {\r\n          particle.speedX *= -0.9;\r\n          particle.x = particle.x < 0 ? 0 : canvas.width;\r\n        }\r\n        if (particle.y < 0 || particle.y > canvas.height) {\r\n          particle.speedY *= -0.9;\r\n          particle.y = particle.y < 0 ? 0 : canvas.height;\r\n        }\r\n      });\r\n      \r\n      requestAnimationFrame(animate);\r\n    }\r\n    \r\n    animate();\r\n    \r\n    // Clean up\r\n    return () => {\r\n      window.removeEventListener('resize', setCanvasDimensions);\r\n      container.removeEventListener('mousemove', handleMouseMove);\r\n      container.removeEventListener('mouseleave', handleMouseLeave);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div \r\n      ref={containerRef} \r\n      className=\"absolute inset-0 overflow-hidden\"\r\n    >\r\n      <div className=\"absolute inset-0 bg-gradient-to-br from-gray-50 to-white dark:from-dark-900 dark:to-dark-800 z-0\"></div>\r\n      <canvas\r\n        ref={canvasRef}\r\n        className=\"absolute inset-0 z-10\"\r\n        style={{ pointerEvents: 'none' }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ParticleBackground;\r\n"],"names":["ParticleBackground","canvasRef","useRef","containerRef","useEffect","current","canvas","ctx","getContext","container","setCanvasDimensions","width","offsetWidth","height","offsetHeight","window","addEventListener","particleColors","minSpeed","particles","Array","from","length","x","Math","random","y","size","color","floor","speedX","speedY","directionChangeTime","directionTimer","opacity","pulse","pulseSpeed","mouse","radius","handleMouseMove","event","rect","getBoundingClientRect","clientX","left","clientY","top","handleMouseLeave","animate","clearRect","lineWidth","i","j","dx","dy","distance","sqrt","gradient","createLinearGradient","addColorStop","replace","beginPath","strokeStyle","moveTo","lineTo","stroke","forEach","particle","sin","Date","now","max","min","arc","PI","fillStyle","fill","force","angle","atan2","cos","requestAnimationFrame","removeEventListener","_jsxs","ref","className","children","_jsx","style","pointerEvents"],"sourceRoot":""}